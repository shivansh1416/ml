import numpy as np
import pandas as pd
from sklearn.metrics import r2_score

# Load the dataset
data = pd.read_csv('D:\Machine Learning\practicals\Advertising.csv')

# Define the features (TV, Radio, Newspaper) and target (Sales)
X = data[['TV', 'Radio', 'Newspaper']].values
y = data['Sales'].values

# Add intercept term to X
X = np.column_stack((np.ones(len(X)), X))

# Define gradient descent function
def gradient_descent(X, y, theta, alpha, iterations):
    m = len(y)
    for _ in range(iterations):
        gradient = np.dot(X.T, np.dot(X, theta) - y) / m
        theta -= alpha * gradient
    return theta

# Initialize theta (weights)
theta = np.zeros(X.shape[1])

# Set hyperparameters
alpha = 0.00001  # Reduce learning rate
iterations = 1000

# Perform gradient descent
theta = gradient_descent(X, y, theta, alpha, iterations)

# Predictions
y_pred = np.dot(X, theta)

# Calculate R-squared value
r2 = r2_score(y, y_pred)
print("R-squared:", r2)